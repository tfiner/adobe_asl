This is a fork of the project at Sourceforge of Adobe Software Labs.

Building:
Prerequisites:
    CMake 2.8+
    gcc 4.6+ / clang 3.2+
    TBB 4.0+
    boost 1.49+

These instructions are assuming that you are at a command line.
1. Use github to pull from this repository (instructions are on github).
2. Make a build result directory (mkdir Debug).
3. Cd to the new build directory (cd Debug).
4. Configure CMake (ccmake <path to source>)
5. Optionally choose your compiler [t], CMAKE_CXX_COMPILER, CMAKE_C_COMPILER, [c]onfigure
6. Set CMAKE_BUILD_TYPE (return, type in Debug, Release, etc., return), [c]onfigure
7. If all goes well, then [g]enerate.
8. make -j <number of cores>

Goals:

1. Use the Adam and Eve libraries to create a sample UI.

2. Painlessly build the libraries using a modern C++ compiler (like Clang).

3. Depend upon system installations of Boost and TBB.

I've converted the ASL half of the source code to build on an OS X system, using:
    CMake 2.8
    boost-1.49 (unpatched)
    TBB tbb40_20110809oss
    clang 3.2
    gcc 4.7

    Note that no attempt yet has been made to build on a linux or a windows (yet).

Building Prerequisites
MacPorts:
    sudo port install boost +universal +debug
        (wait a long time, macports has multicore support disabled for bjam)
        You must use the +universal variant to build the 32 bit version.
        The +debug variant is nice to have, and not strictly necessary.
        
    sudo port install tbb +universal +debug

In Progress
I'm still working on converting the platform half to build using CMake & clang.  Clang is a lot more strict and there are some bits of the platform library that it complains about.  I've gotten rid of a bunch of the warnings (there were some real bugs in there).

Almost there!  Everything compiles except for platform_widget_utils.cpp.


Problems
platform_widget_utils.cpp

deleted functions:
FMGetFontFromATSFontRef
FMGetFontFamilyInstanceFromFont

I did some research and it looks like those two functions have been deprecated for a long time, and they were finally deleted in 10.7.

There are a few errors relating to 64 bit in the platform library.  I found out that it is related to Carbon and the Navigation system.  The function calls in the platform code aren't available in 64 bit.  There are newer API calls that are in the 64 bit version, but I'm not familiar enough to make those changes.

I'm building 32 bit versions of the libraries for now.